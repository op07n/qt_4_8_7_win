Index: mkspecs/win32-msvc2019/qmake.conf
===================================================================
--- mkspecs/win32-msvc2019/qmake.conf	(nonexistent)
+++ mkspecs/win32-msvc2019/qmake.conf	(working copy)
@@ -0,0 +1,97 @@
+#
+# qmake configuration for win32-msvc2019
+#
+# Written for Microsoft Visual C++ 2019
+#
+
+MAKEFILE_GENERATOR      = MSBUILD
+TEMPLATE                = app
+CONFIG                  += qt warn_on release incremental flat link_prl precompile_header autogen_precompile_source copy_dir_files debug_and_release debug_and_release_target embed_manifest_dll embed_manifest_exe
+QT                      += core gui
+DEFINES                 += UNICODE WIN32
+QMAKE_COMPILER_DEFINES  += _MSC_VER=1925 WIN32
+
+QMAKE_CC                = cl
+QMAKE_LEX               = flex
+QMAKE_LEXFLAGS          =
+QMAKE_YACC              = byacc
+QMAKE_YACCFLAGS         = -d
+QMAKE_CFLAGS            = -nologo -Zm200 -Zc:wchar_t- -FS
+QMAKE_CFLAGS_WARN_ON    = -W3
+QMAKE_CFLAGS_WARN_OFF   = -W0
+QMAKE_CFLAGS_RELEASE    = -Od -MD
+QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += -Od -MD -Zi
+QMAKE_CFLAGS_DEBUG      = -Zi -MDd
+QMAKE_CFLAGS_YACC       =
+QMAKE_CFLAGS_LTCG       = -GL
+QMAKE_CFLAGS_MP         = -MP
+
+QMAKE_CXX               = $$QMAKE_CC
+QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON -w34100 -w34189
+QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO += $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_LTCG     = $$QMAKE_CFLAGS_LTCG
+QMAKE_CXXFLAGS_MP       = $$QMAKE_CFLAGS_MP
+QMAKE_CXXFLAGS_STL_ON   = -EHsc
+QMAKE_CXXFLAGS_STL_OFF  =
+QMAKE_CXXFLAGS_RTTI_ON  = -GR
+QMAKE_CXXFLAGS_RTTI_OFF =
+QMAKE_CXXFLAGS_EXCEPTIONS_ON = -EHsc
+QMAKE_CXXFLAGS_EXCEPTIONS_OFF =
+
+QMAKE_INCDIR            =
+QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
+QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]
+
+QMAKE_RUN_CC            = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$obj $src
+QMAKE_RUN_CC_IMP        = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ $<
+QMAKE_RUN_CC_IMP_BATCH  = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ @<<
+QMAKE_RUN_CXX           = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$obj $src
+QMAKE_RUN_CXX_IMP       = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ $<
+QMAKE_RUN_CXX_IMP_BATCH = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ @<<
+
+QMAKE_LINK              = link
+QMAKE_LFLAGS            = /NOLOGO /DYNAMICBASE /NXCOMPAT
+QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO = /DEBUG /OPT:REF
+QMAKE_LFLAGS_RELEASE    = $$QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_LFLAGS_DEBUG      = /DEBUG
+QMAKE_LFLAGS_CONSOLE    = /SUBSYSTEM:CONSOLE
+QMAKE_LFLAGS_WINDOWS    = /SUBSYSTEM:WINDOWS
+QMAKE_LFLAGS_EXE        = \"/MANIFESTDEPENDENCY:type=\'win32\' name=\'Microsoft.Windows.Common-Controls\' version=\'6.0.0.0\' publicKeyToken=\'6595b64144ccf1df\' language=\'*\' processorArchitecture=\'*\'\"
+QMAKE_LFLAGS_DLL        = /DLL
+QMAKE_LFLAGS_LTCG       = /LTCG
+
+QMAKE_LIBS_CORE         = kernel32.lib user32.lib shell32.lib uuid.lib ole32.lib advapi32.lib ws2_32.lib
+QMAKE_LIBS_GUI          = gdi32.lib comdlg32.lib oleaut32.lib imm32.lib winmm.lib winspool.lib ws2_32.lib ole32.lib user32.lib advapi32.lib
+QMAKE_LIBS_NETWORK      = ws2_32.lib
+QMAKE_LIBS_OPENGL       = glu32.lib opengl32.lib gdi32.lib user32.lib
+QMAKE_LIBS_COMPAT       = advapi32.lib shell32.lib comdlg32.lib user32.lib gdi32.lib ws2_32.lib
+
+QMAKE_LIBS_QT_ENTRY     = -lqtmain
+
+QMAKE_MOC               = $$[QT_INSTALL_BINS]\\moc.exe
+QMAKE_UIC               = $$[QT_INSTALL_BINS]\\uic.exe
+QMAKE_IDC               = $$[QT_INSTALL_BINS]\\idc.exe
+
+QMAKE_IDL               = midl
+QMAKE_LIB               = lib /NOLOGO
+QMAKE_RC                = rc
+
+QMAKE_ZIP               = zip -r -9
+
+QMAKE_COPY              = copy /y
+QMAKE_COPY_DIR          = xcopy /s /q /y /i
+QMAKE_MOVE              = move
+QMAKE_DEL_FILE          = del
+QMAKE_DEL_DIR           = rmdir
+QMAKE_CHK_DIR_EXISTS    = if not exist
+QMAKE_MKDIR             = mkdir
+
+VCPROJ_EXTENSION        = .vcxproj
+VCSOLUTION_EXTENSION    = .sln
+VCPROJ_KEYWORD  = Qt4VSv1.0
+load(qt_config)
Index: mkspecs/win32-msvc2019/qplatformdefs.h
===================================================================
--- mkspecs/win32-msvc2019/qplatformdefs.h	(nonexistent)
+++ mkspecs/win32-msvc2019/qplatformdefs.h	(working copy)
@@ -0,0 +1,42 @@
+/****************************************************************************
+**
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3.0 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU General Public License version 3.0 requirements will be
+** met: http://www.gnu.org/copyleft/gpl.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "../win32-msvc2005/qplatformdefs.h"
Index: mkspecs/win32-msvc2019/qmake.conf
===================================================================
--- mkspecs/win32-msvc2019/qmake.conf	(nonexistent)
+++ mkspecs/win32-msvc2019/qmake.conf	(working copy)
@@ -0,0 +1,97 @@
+#
+# qmake configuration for win32-msvc2019
+#
+# Written for Microsoft Visual C++ 2019
+#
+
+MAKEFILE_GENERATOR      = MSBUILD
+TEMPLATE                = app
+CONFIG                  += qt warn_on release incremental flat link_prl precompile_header autogen_precompile_source copy_dir_files debug_and_release debug_and_release_target embed_manifest_dll embed_manifest_exe
+QT                      += core gui
+DEFINES                 += UNICODE WIN32
+QMAKE_COMPILER_DEFINES  += _MSC_VER=1925 WIN32
+
+QMAKE_CC                = cl
+QMAKE_LEX               = flex
+QMAKE_LEXFLAGS          =
+QMAKE_YACC              = byacc
+QMAKE_YACCFLAGS         = -d
+QMAKE_CFLAGS            = -nologo -Zm200 -Zc:wchar_t- -FS
+QMAKE_CFLAGS_WARN_ON    = -W3
+QMAKE_CFLAGS_WARN_OFF   = -W0
+QMAKE_CFLAGS_RELEASE    = -Od -MD
+QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += -Od -MD -Zi
+QMAKE_CFLAGS_DEBUG      = -Zi -MDd
+QMAKE_CFLAGS_YACC       =
+QMAKE_CFLAGS_LTCG       = -GL
+QMAKE_CFLAGS_MP         = -MP
+
+QMAKE_CXX               = $$QMAKE_CC
+QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON -w34100 -w34189
+QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO += $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_LTCG     = $$QMAKE_CFLAGS_LTCG
+QMAKE_CXXFLAGS_MP       = $$QMAKE_CFLAGS_MP
+QMAKE_CXXFLAGS_STL_ON   = -EHsc
+QMAKE_CXXFLAGS_STL_OFF  =
+QMAKE_CXXFLAGS_RTTI_ON  = -GR
+QMAKE_CXXFLAGS_RTTI_OFF =
+QMAKE_CXXFLAGS_EXCEPTIONS_ON = -EHsc
+QMAKE_CXXFLAGS_EXCEPTIONS_OFF =
+
+QMAKE_INCDIR            =
+QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
+QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]
+
+QMAKE_RUN_CC            = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$obj $src
+QMAKE_RUN_CC_IMP        = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ $<
+QMAKE_RUN_CC_IMP_BATCH  = $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ @<<
+QMAKE_RUN_CXX           = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$obj $src
+QMAKE_RUN_CXX_IMP       = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ $<
+QMAKE_RUN_CXX_IMP_BATCH = $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ @<<
+
+QMAKE_LINK              = link
+QMAKE_LFLAGS            = /NOLOGO /DYNAMICBASE /NXCOMPAT
+QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO = /DEBUG /OPT:REF
+QMAKE_LFLAGS_RELEASE    = $$QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO
+QMAKE_LFLAGS_DEBUG      = /DEBUG
+QMAKE_LFLAGS_CONSOLE    = /SUBSYSTEM:CONSOLE
+QMAKE_LFLAGS_WINDOWS    = /SUBSYSTEM:WINDOWS
+QMAKE_LFLAGS_EXE        = \"/MANIFESTDEPENDENCY:type=\'win32\' name=\'Microsoft.Windows.Common-Controls\' version=\'6.0.0.0\' publicKeyToken=\'6595b64144ccf1df\' language=\'*\' processorArchitecture=\'*\'\"
+QMAKE_LFLAGS_DLL        = /DLL
+QMAKE_LFLAGS_LTCG       = /LTCG
+
+QMAKE_LIBS_CORE         = kernel32.lib user32.lib shell32.lib uuid.lib ole32.lib advapi32.lib ws2_32.lib
+QMAKE_LIBS_GUI          = gdi32.lib comdlg32.lib oleaut32.lib imm32.lib winmm.lib winspool.lib ws2_32.lib ole32.lib user32.lib advapi32.lib
+QMAKE_LIBS_NETWORK      = ws2_32.lib
+QMAKE_LIBS_OPENGL       = glu32.lib opengl32.lib gdi32.lib user32.lib
+QMAKE_LIBS_COMPAT       = advapi32.lib shell32.lib comdlg32.lib user32.lib gdi32.lib ws2_32.lib
+
+QMAKE_LIBS_QT_ENTRY     = -lqtmain
+
+QMAKE_MOC               = $$[QT_INSTALL_BINS]\\moc.exe
+QMAKE_UIC               = $$[QT_INSTALL_BINS]\\uic.exe
+QMAKE_IDC               = $$[QT_INSTALL_BINS]\\idc.exe
+
+QMAKE_IDL               = midl
+QMAKE_LIB               = lib /NOLOGO
+QMAKE_RC                = rc
+
+QMAKE_ZIP               = zip -r -9
+
+QMAKE_COPY              = copy /y
+QMAKE_COPY_DIR          = xcopy /s /q /y /i
+QMAKE_MOVE              = move
+QMAKE_DEL_FILE          = del
+QMAKE_DEL_DIR           = rmdir
+QMAKE_CHK_DIR_EXISTS    = if not exist
+QMAKE_MKDIR             = mkdir
+
+VCPROJ_EXTENSION        = .vcxproj
+VCSOLUTION_EXTENSION    = .sln
+VCPROJ_KEYWORD  = Qt4VSv1.0
+load(qt_config)
Index: qmake/Makefile.win32
===================================================================
--- qmake/Makefile.win32	(revision 10789)
+++ qmake/Makefile.win32	(working copy)
@@ -1,4 +1,4 @@
-!IF "$(QMAKESPEC)" == "win32-msvc" || "$(QMAKESPEC)" == "win32-msvc.net" || "$(QMAKESPEC)" == "win32-msvc2002" || "$(QMAKESPEC)" == "win32-msvc2003" || "$(QMAKESPEC)" == "win32-msvc2005" || "$(QMAKESPEC)" == "win32-msvc2008" || "$(QMAKESPEC)" == "win32-msvc2010" || "$(QMAKESPEC)" == "win32-msvc2012" || "$(QMAKESPEC)" == "win32-msvc2013" || "$(QMAKESPEC)" == "win32-msvc2015" || "$(QMAKESPEC)" == "win32-icc"
+!IF "$(QMAKESPEC)" == "win32-msvc" || "$(QMAKESPEC)" == "win32-msvc.net" || "$(QMAKESPEC)" == "win32-msvc2002" || "$(QMAKESPEC)" == "win32-msvc2003" || "$(QMAKESPEC)" == "win32-msvc2005" || "$(QMAKESPEC)" == "win32-msvc2008" || "$(QMAKESPEC)" == "win32-msvc2010" || "$(QMAKESPEC)" == "win32-msvc2012" || "$(QMAKESPEC)" == "win32-msvc2013" || "$(QMAKESPEC)" == "win32-msvc2015" || "$(QMAKESPEC)" == "win32-msvc2019" || "$(QMAKESPEC)" == "win32-icc"
 
 !if "$(SOURCE_PATH)" == ""
 SOURCE_PATH = ..
Index: tools/configure/configureapp.cpp
===================================================================
--- tools/configure/configureapp.cpp	(revision 10789)
+++ tools/configure/configureapp.cpp	(working copy)
@@ -1376,7 +1376,8 @@
             qmakeSpec.endsWith("-msvc2010") ||
             qmakeSpec.endsWith("-msvc2012") ||
             qmakeSpec.endsWith("-msvc2013") ||
-            qmakeSpec.endsWith("-msvc2015")) {
+            qmakeSpec.endsWith("-msvc2015") ||
+			qmakeSpec.endsWith("-msvc2019")) {
             if (dictionary[ "MAKE" ].isEmpty()) dictionary[ "MAKE" ] = "nmake";
             dictionary[ "QMAKEMAKEFILE" ] = "Makefile.win32";
         } else if (qmakeSpec.contains("win32-g++")) {
Index: tools/configure/environment.cpp
===================================================================
--- tools/configure/environment.cpp	(revision 10789)
+++ tools/configure/environment.cpp	(working copy)
@@ -86,7 +86,9 @@
     {CC_NET2013, "Microsoft (R) 32-bit C/C++ Optimizing Compiler.NET 2013 (12.0)", "Software\\Wow6432Node\\Microsoft\\VisualStudio\\SxS\\VC7\\12.0", "cl.exe"}, // link.exe, lib.exe
     {CC_NET2015, "Microsoft (R) 32-bit C/C++ Optimizing Compiler.NET 2015 (14.0)", "Software\\Microsoft\\VisualStudio\\SxS\\VC7\\14.0", "cl.exe"}, // link.exe, lib.exe
     {CC_NET2015, "Microsoft (R) 32-bit C/C++ Optimizing Compiler.NET 2015 (14.0)", "Software\\Wow6432Node\\Microsoft\\VisualStudio\\SxS\\VC7\\14.0", "cl.exe"}, // link.exe, lib.exe
-    {CC_UNKNOWN, "Unknown", 0, 0},
+    {CC_NET2019, "Microsoft (R) 32-bit C/C++ Optimizing Compiler.NET 2019 (15.0)", "Software\\Microsoft\\VisualStudio\\SxS\\VC7\\15.0", "cl.exe"},  // TODO: CHECK THIS PATH!!!
+    {CC_NET2019, "Microsoft (R) 32-bit C/C++ Optimizing Compiler.NET 2019 (15.0)", "Software\\Wow6432Node\\Microsoft\\VisualStudio\\SxS\\VC7\\15.0", "cl.exe"},  // TODO: CHECK THIS PATH!!!
+	{CC_UNKNOWN, "Unknown", 0, 0},
 };
 
 
@@ -111,6 +113,9 @@
 {
     QString spec;
     switch (detectCompiler()) {
+	case CC_NET2019:
+	    spec = "win32-msvc2019";
+		break;
     case CC_NET2015:
         spec = "win32-msvc2015";
         break;
Index: tools/configure/environment.h
===================================================================
--- tools/configure/environment.h	(revision 10789)
+++ tools/configure/environment.h	(working copy)
@@ -57,7 +57,8 @@
     CC_NET2010 = 0xA0,
     CC_NET2012 = 0xB0,
     CC_NET2013 = 0xC0,
-    CC_NET2015 = 0xD0
+    CC_NET2015 = 0xD0,
+	CC_NET2019 = 0xE0
 };
 
 struct CompilerInfo;
